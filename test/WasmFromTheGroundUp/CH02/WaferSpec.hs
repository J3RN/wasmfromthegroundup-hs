module WasmFromTheGroundUp.CH02.WaferSpec (spec) where

import qualified Data.ByteString.Builder        as Builder
import qualified Data.ByteString.Lazy           as ByteString
import           Data.Word                      (Word8)
import           Test.Hspec
import qualified WasmFromTheGroundUp.CH02.Wafer as Wafer

spec :: Spec
spec = describe "Wafer" $ do
  describe "compile" $ do
    it "handles 42" $ do
      "42" `shouldCompileTo` [0x0, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x05, 0x01, 0x60, 0x00, 0x01, 0x7F, 0x03, 0x02, 0x01, 0x00, 0x07, 0x08, 0x01, 0x04, 0x6D, 0x61, 0x69, 0x6E, 0x00, 0x00, 0x0A, 0x06, 0x01, 0x4, 0x00, 0x41, 0x2A, 0x0B]

    it "handes 0" $ do
      "0" `shouldCompileTo` [0x0, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x05, 0x01, 0x60, 0x00, 0x01, 0x7F, 0x03, 0x02, 0x01, 0x00, 0x07, 0x08, 0x01, 0x04, 0x6D, 0x61, 0x69, 0x6E, 0x00, 0x00, 0x0A, 0x06, 0x01, 0x4, 0x00, 0x41, 0x00, 0x0B]

-- Helpers

shouldCompileTo :: HasCallStack => String -> [Word8] -> Expectation
shouldCompileTo code bytes =
  let expected = ByteString.pack bytes
      actual = Builder.toLazyByteString <$> Wafer.compile code
   in actual `shouldBe` Right expected
